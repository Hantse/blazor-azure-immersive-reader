!function (e, t) { "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.ImmersiveReader = t() : e.ImmersiveReader = t() }(self, (function () { return (() => { "use strict"; var e = { 150: (e, t) => { var r; Object.defineProperty(t, "__esModule", { value: !0 }), t.ErrorCode = void 0, (r = t.ErrorCode || (t.ErrorCode = {})).BadArgument = "BadArgument", r.Timeout = "Timeout", r.TokenExpired = "TokenExpired", r.Throttled = "Throttled", r.ServerError = "ServerError", r.InvalidSubdomain = "InvalidSubdomain" }, 925: function (e, t, r) { var n = this && this.__assign || function () { return n = Object.assign || function (e) { for (var t, r = 1, n = arguments.length; r < n; r++)for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); return e }, n.apply(this, arguments) }; Object.defineProperty(t, "__esModule", { value: !0 }), t.isValidSubdomain = t.close = t.launchAsync = void 0; var i = r(411), a = r(150), o = "ImmersiveReader-Preferences:", s = "ImmersiveReader-LaunchResponse:", d = {}; d[a.ErrorCode.TokenExpired] = "The access token supplied is expired.", d[a.ErrorCode.Throttled] = "You have exceeded your quota.", d[a.ErrorCode.ServerError] = "An error occurred when calling the server to process the text.", d[a.ErrorCode.InvalidSubdomain] = "The subdomain supplied is invalid."; var l = !1; function u(e) { return !!e && new RegExp("^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])$").test(e) } t.launchAsync = function (e, t, r, c) { return l ? Promise.reject("Immersive Reader is already launching") : new Promise((function (m, p) { if (e) if (r) if (r.chunks) if (r.chunks.length) if (u(t) || c && c.customDomain) { l = !0; var h = Date.now(); (c = n({ uiZIndex: 1e3, timeout: 15e3, useWebview: !1, allowFullscreen: !0, hideExitButton: !1, cookiePolicy: i.CookiePolicy.Disable }, c)).uiZIndex && "number" == typeof c.uiZIndex || (c.uiZIndex = 1e3); var v = null, b = document.createElement("div"), g = c.useWebview ? document.createElement("webview") : document.createElement("iframe"); g.allow = "autoplay", g.title = "Immersive Reader Frame", g.setAttribute("aria-modal", "true"); var f = document.createElement("style"); f.innerHTML = "body{height:100%;overflow:hidden;}"; var y = function () { v && (window.clearTimeout(v), v = null) }, k = c.parent && document.contains(c.parent) ? c.parent : document.body, w = function () { k.contains(b) && k.removeChild(b), window.removeEventListener("message", x), y(), f.parentNode && f.parentNode.removeChild(f) }, E = function () { if (w(), l = !1, c.onExit) try { c.onExit() } catch (e) { } }; w(); var x = function (n) { if (n && n.data && "string" == typeof n.data) if ("ImmersiveReader-ReadyForContent" === n.data) { y(); var i = { cogSvcsAccessToken: e, cogSvcsSubdomain: t, request: r, launchToPostMessageSentDurationInMs: Date.now() - h, disableFirstRun: c.disableFirstRun, readAloudOptions: c.readAloudOptions, translationOptions: c.translationOptions, displayOptions: c.displayOptions, sendPreferences: !!c.onPreferencesChanged, preferences: c.preferences, disableTranslation: c.disableTranslation, disableGrammar: c.disableGrammar, disableLanguageDetection: c.disableLanguageDetection }; g.contentWindow.postMessage(JSON.stringify({ messageType: "Content", messageValue: i }), "*") } else if ("ImmersiveReader-Exit" === n.data) E(); else if (n.data.startsWith(s)) { var u = null, v = null, f = null; try { f = JSON.parse(n.data.substring(s.length)) } catch (e) { } f && f.success ? u = { container: b, sessionId: f.sessionId, charactersProcessed: f.meteredContentSize } : v = f && !f.success ? { code: f.errorCode, message: d[f.errorCode], sessionId: f.sessionId } : { code: a.ErrorCode.ServerError, message: d[a.ErrorCode.ServerError] }, l = !1, u ? (y(), m(u)) : v && (E(), p(v)) } else if (n.data.startsWith(o) && c.onPreferencesChanged && "function" == typeof c.onPreferencesChanged) try { c.onPreferencesChanged(n.data.substring(o.length)) } catch (e) { } }; window.addEventListener("message", x), v = window.setTimeout((function () { w(), l = !1, p({ code: a.ErrorCode.Timeout, message: "Page failed to load after timeout (" + c.timeout + " ms)" }) }), c.timeout), c.allowFullscreen && g.setAttribute("allowfullscreen", ""), g.style.cssText = c.parent ? "position: static; width: 100%; height: 100%; left: 0; top: 0; border-width: 0" : "position: static; width: 100vw; height: 100vh; left: 0; top: 0; border-width: 0", c.useWebview && g.addEventListener("loadstop", (function () { g.contentWindow.postMessage(JSON.stringify({ messageType: "WebviewHost" }), "*") })); var C = (c.customDomain ? c.customDomain : "https://" + t + ".cognitiveservices.azure.com/immersivereader/webapp/v1.0/") + "reader?exitCallback=ImmersiveReader-Exit&sdkPlatform=js&sdkVersion=1.2.0"; C += "&cookiePolicy=" + (c.cookiePolicy === i.CookiePolicy.Enable ? "enable" : "disable"), c.hideExitButton && (C += "&hideExitButton=true"), c.uiLang && (C += "&omkt=" + c.uiLang), g.src = C, b.style.cssText = c.parent ? "position: relative; width: 100%; height: 100%; border-width: 0; -webkit-perspective: 1px; z-index: " + c.uiZIndex + "; background: white; overflow: hidden" : "position: fixed; width: 100vw; height: 100vh; left: 0; top: 0; border-width: 0; -webkit-perspective: 1px; z-index: " + c.uiZIndex + "; background: white; overflow: hidden", b.appendChild(g), k.appendChild(b), document.head.appendChild(f) } else p({ code: a.ErrorCode.InvalidSubdomain, message: d[a.ErrorCode.InvalidSubdomain] }); else p({ code: a.ErrorCode.BadArgument, message: "Chunks must not be empty" }); else p({ code: a.ErrorCode.BadArgument, message: "Chunks must not be null" }); else p({ code: a.ErrorCode.BadArgument, message: "Content must not be null" }); else p({ code: a.ErrorCode.BadArgument, message: "Token must not be null" }) })) }, t.close = function () { window.postMessage("ImmersiveReader-Exit", "*") }, t.isValidSubdomain = u }, 411: (e, t) => { var r, n; Object.defineProperty(t, "__esModule", { value: !0 }), t.ThemeOption = t.CookiePolicy = void 0, (n = t.CookiePolicy || (t.CookiePolicy = {}))[n.Disable = 0] = "Disable", n[n.Enable = 1] = "Enable", (r = t.ThemeOption || (t.ThemeOption = {}))[r.Light = 0] = "Light", r[r.Dark = 1] = "Dark" }, 848: (e, t) => { Object.defineProperty(t, "__esModule", { value: !0 }), t.renderButtons = void 0; var r = "data-locale", n = { af: "Indompelende leser", am: "á‰ áˆ…á‹«á‹ áˆµáˆœá‰µ áˆáŒ£áˆª á‹•á‹­á‰³ áŠ áŠ•á‰£á‰¢", ar: "Ø§Ù„Ù‚Ø§Ø±Ø¦ Ø§Ù„Ø´Ø§Ù…Ù„", as: "à¦‡à¦®à¦¾à§°à¦šà¦¿à¦­ à§°à¦¿à¦¡à¦¾à§°", az: "Ä°mmersiv Oxuyucu", be: "Ð†Ð¼ÐµÑ€ÑÑ–ÑžÐ½Ñ‹ Ñ‡Ñ‹Ñ‚Ð°Ð»ÑŒÐ½Ñ–Ðº", bg: "ÐšÐ¾Ð½Ñ†ÐµÐ½Ñ‚Ñ€Ð¸Ñ€Ð°Ð½ Ñ‡ÐµÑ‚ÐµÑ†", bn: "à¦®à¦¨à§‹à¦—à§à¦°à¦¾à¦¹à§€ à¦ªà¦¾à¦ à¦•", "bn-bd": "à¦‡à¦®à¦¾à¦°à§à¦¸à¦¿à¦­ à¦ªà¦¾à¦ à¦•", bs: "Koncentrirani Äitalac", ca: "Lector immersiu", cs: "AsistivnÃ­ ÄteÄka", "cy-gb": "Darllenydd Ymdrwythol", da: "Forenklet lÃ¦ser", de: "Plastischer Reader", el: "Î ÏÎ¿Î·Î³Î¼Î­Î½Î¿ Ï€ÏÏŒÎ³ÏÎ±Î¼Î¼Î± Î±Î½Î¬Î³Î½Ï‰ÏƒÎ·Ï‚", en: "Immersive Reader", es: "Lector inmersivo", et: "SÃ¼valuger", eu: "Irakurgailu murgiltzailea", fa: "Ø®ÙˆØ§Ù†Ù†Ø¯Ù‡ Ù‡Ù…Ù‡â€ŒØ¬Ø§Ù†Ø¨Ù‡", fi: "SyventÃ¤vÃ¤ lukuohjelma", fil: "Immersive Reader", fr: "Lecteur immersif", "ga-ie": "LÃ©itheoir tumthach", gd: "An leughadair Ã¹r-nÃ²sach", gl: "Lector avanzado", gu: "àª‡àª®àª°à«àª¸àª¿àªµ àª°à«€àª¡àª°", ha: "Mai karatu Mai barbazawa", he: "×ª×¦×•×’×ª ×§×¨×™××” ×ž×•×“×¨× ×™×ª", hi: "à¤‡à¤®à¤°à¥à¤¸à¤¿à¤µ à¤°à¥€à¤¡à¤°", hr: "Stopljeni ÄitaÄ", hu: "Modern olvasÃ³", hy: "Ô½Õ¸Ö€Õ¡Õ½Õ¸Ö‚Õ¦Õ¾Õ¡Õ® Õ¨Õ¶Õ©Õ¥Ö€ÖÕ«Õ¹", id: "Pembaca Imersif", ig: "á»Œgá»¥á»¥ Kenzipá»¥tara", is: "AÃ°gengilegt lestrarumhverfi", it: "Strumento di lettura immersiva", ja: "ã‚¤ãƒžãƒ¼ã‚·ãƒ– ãƒªãƒ¼ãƒ€ãƒ¼", ka: "áƒ˜áƒ›áƒ”áƒ áƒ¡áƒ˜áƒ£áƒšáƒ˜ áƒ¬áƒáƒ›áƒ™áƒ˜áƒ—áƒ®áƒ•áƒ”áƒšáƒ˜", kk: "Ð˜Ð¼Ð¼ÐµÑ€ÑÐ¸Ð²Ñ‚Ñ– Ð¾Ò›Ñƒ Ò›Ò±Ñ€Ð°Ð»Ñ‹", km: "áž€áž˜áŸ’áž˜ážœáž·áž’áž¸áž¢áž¶áž“áž–ážŽáŸŒážšáŸ†áž›áŸáž…áž“áŸ…áž›áž¾áž¢áŸáž€áŸ’ážšáž„áŸ‹", kn: "à²‡à²®à³à²®à²°à³à²¸à²¿à²µà³ à²“à²¦à³à²—", ko: "ëª°ìž…í˜• ë¦¬ë”", kok: "à¤¤à¤‚à¤¦à¥à¤°à¥€ à¤²à¤¾à¤—à¤¿à¤²à¥à¤²à¥‹ à¤µà¤¾à¤šà¤•", "ku-arab": "Ø®ÙˆÛŽÙ†Û•Ø±ÛŒ Ù¾Ú•", ky: "ÐšÑƒÑ€Ñ‡Ð°Ð³Ð°Ð½ ÐžÐºÑƒÐ³ÑƒÑ‡", lb: "Immersive Reader", lo: "àº•àº»àº§àº­à»ˆàº²àº™àº­àº´àº¡à»€àº¡àºµàºªàºµàºš", lt: "Ä®traukianti skaitytuvÄ—", lv: "TÄ«rskata lasÄ«tÄjs", mi: "PÅ«pÄnui Rumaki", mk: "Ð¡ÐµÐ¾Ð¿Ñ„Ð°Ñ‚ÐµÐ½ Ñ‡Ð¸Ñ‚Ð°Ñ‡", ml: "à´‡à´®àµà´®àµ‡à´´àµâ€Œà´¸àµ€à´µàµ à´±àµ€à´¡àµ¼", mn: "Ð˜Ð´ÑÐ²Ñ…Ñ‚ÑÐ¹ ÑƒÐ½ÑˆÐ¸Ð³Ñ‡", mr: "à¤‡à¤®à¤°à¥à¤¸à¤¿à¤µà¥à¤¹ à¤µà¤¾à¤šà¤•", ms: "Pembaca Imersif", mt: "Qarrej Immersiv", ne: "à¤‡à¤®à¥‡à¤°à¥à¤¸à¤¿à¤­ à¤°à¤¿à¤¡à¤°", nl: "Insluitende lezer", "nn-no": "Engasjerande lesar", no: "Engasjerende leser", nso: "Go Bala ka Mongwalo o Mokoto", or: "à¬‡à¬®à¬°à¬¸à¬¿à¬­à­ à¬°à¬¿à¬¡à¬°à­", pa: "à¨‡à¨®à¨°à¨¸à¨¿à¨µ à¨°à©€à¨¡à¨°", "pa-arab": "Ú¯Ú¾ÛŒØ±Ù† Ø¢Ù„Ø§ Ù…Ø·Ø§Ù„Ø¹Û Ú©Ø§Ø±", pl: "Czytnik immersyjny", prs: "Ø®ÙˆØ§Ù†Ù†Ø¯Ù‡ Ù†Ù…Ø§ÛŒØ´", pt: "Leitura AvanÃ§ada", quc: "Nim ucholajil sik'inel uwach", quz: "Wankisqa Ã‘awiq", ro: "Immersive Reader", ru: "Ð˜Ð¼Ð¼ÐµÑ€ÑÐ¸Ð²Ð½Ð¾Ðµ ÑÑ€ÐµÐ´ÑÑ‚Ð²Ð¾ Ñ‡Ñ‚ÐµÐ½Ð¸Ñ", rw: "Insakazasoma", sd: "Ø§Ù…Ø±Ø³Ùˆ Ø±ÙŠÚŠØ±", si: "à¶œà·’à¶½à·™à¶± à·ƒà·”à·…à·” à¶šà·’à¶ºà·€à¶±à¶º", sk: "ImerznÃ¡ ÄÃ­taÄka", sl: "Potopni bralnik", sq: "Lexuesi kredhÃ«s", "sr-cyrl-ba": "ÐšÐ¾Ð½Ñ†ÐµÐ½Ñ‚Ñ€Ð¸ÑÐ°Ð½Ð¸ Ñ‡Ð¸Ñ‚Ð°Ð»Ð°Ñ†", "sr-cyrl-rs": "ÐšÐ¾Ð½Ñ†ÐµÐ½Ñ‚Ñ€Ð¸ÑÐ°Ð½Ð¸ Ñ‡Ð¸Ñ‚Ð°Ð»Ð°Ñ†", "sr-latn-rs": "Koncentrisani Äitalac", sv: "Avancerad lÃ¤sare", sw: "Kisomaji cha Kuzamisha", ta: "à®…à®±à¯à®ªà¯à®¤à®®à®¾à®© à®°à¯€à®Ÿà®°à¯", te: "à°®à°‚à°¤à±à°°à°®à±à°—à±à°§à±à°²à°¨à± à°šà±‡à°¸à±‡ à°ªà° à°¨ à°¸à°¾à°§à°¨à°‚", "tg-cyrl-tj": "Ð¥Ð¾Ð½Ð°Ð½Ð´Ð°Ð¸ Ñ„Ð°Ñ€Ð¾Ð³Ð¸Ñ€", th: "à¹‚à¸›à¸£à¹à¸à¸£à¸¡à¸Šà¹ˆà¸§à¸¢à¸­à¹ˆà¸²à¸™", ti: "áŠ£áŠ•á‰£á‰¢ áˆ•áˆ‰á‹ áˆµáˆá‹’á‰µ áˆáŒ£áˆª", tk: "GiÅˆiÅŸleÃ½in okaÃ½jy", tn: "Sebadi sa Imesife", tr: "Tam Ekran Okuyucu", tt: "Ð§Ð¾Ð»Ð³Ð°Ð¿ Ð°Ð»ÑƒÑ‡Ñ‹ ÑƒÐºÑƒ Ñ‡Ð°Ñ€Ð°ÑÑ‹", "ug-cn": "Ú†Û†ÙƒÙ…Û• Ø¦ÙˆÙ‚Û‡ØºÛ‡Ú†", uk: "Ð—Ð°Ð½ÑƒÑ€ÐµÐ½Ð½Ñ Ð² Ñ‚ÐµÐºÑÑ‚", ur: "Ø§Ù…Ø±Ø³ÛŒÙˆ Ù…Ø·Ø§Ù„Ø¹Û Ú©Ø§Ø±", uz: "Immersiv mutolaa vositasi", vi: "TrÃ¬nh Ä‘á»c ChÃ¢n thá»±c", wo: "JÃ ngukaay bu Rafet", xh: "Isifundi Esikhulu", yo: "ÃŒwÃ² AlÃ¡mÃ¹tÃ¡n", zh: "æ²‰æµ¸å¼é˜…è¯»å™¨", "zh-hant": "æ²ˆæµ¸å¼é–±è®€ç¨‹å¼", zu: "Isifundi Sokuzizwisa" }; function i(e) { var t = document.createElement("img"); t.src = "https://ircdname.azureedge.net/permanent-static-resources/immersive-reader-icon.svg"; var n = e.getAttribute("data-icon-px-size") || "20"; t.style.height = t.style.width = n + "px", t.style.verticalAlign = "middle", t.style.marginTop = "-2px"; var i = e.getAttribute(r) || "en"; t.alt = s(i), e.appendChild(t) } function a(e) { var t = document.createElement("span"); t.style.marginLeft = "8px", e.appendChild(t) } function o(e) { var t = document.createElement("span"), n = e.getAttribute(r) || "en"; t.textContent = s(n), e.appendChild(t) } function s(e) { return e = e.toLowerCase(), n[e] ? n[e] : "zh-hk" === e || "zh-mo" === e || "zh-tw" === e ? n["zh-hant"] : (e = e.substring(0, e.lastIndexOf("-")), n[e] ? n[e] : (e = e.substring(0, e.lastIndexOf("-")), n[e] ? n[e] : n.en)) } t.renderButtons = function (e) { var t = document.createElement("style"); t.innerHTML = ".immersive-reader-button{cursor:pointer;display:inline-block;padding:5px;} .immersive-reader-button:hover{background:rgba(0,0,0,.05);border-radius:2px", document.head.appendChild(t); var n = [].slice.call(document.getElementsByClassName("immersive-reader-button")); e && e.elements && (n = e.elements); for (var d = 0, l = n; d < l.length; d++) { var u = l[d]; u.setAttribute("role", "button"); var c = u.getAttribute(r) || "en"; switch (u.setAttribute("aria-label", s(c)), u.textContent = "", u.getAttribute("data-button-style") || "icon") { case "icon": i(u); break; case "text": o(u); break; case "iconAndText": i(u), a(u), o(u) } } } } }, t = {}; function r(n) { var i = t[n]; if (void 0 !== i) return i.exports; var a = t[n] = { exports: {} }; return e[n].call(a.exports, a, a.exports, r), a.exports } var n = {}; return (() => { var e = n; Object.defineProperty(e, "__esModule", { value: !0 }), e.CookiePolicy = e.launchAsync = e.close = e.renderButtons = void 0; var t = r(848); Object.defineProperty(e, "renderButtons", { enumerable: !0, get: function () { return t.renderButtons } }); var i = r(925); Object.defineProperty(e, "close", { enumerable: !0, get: function () { return i.close } }), Object.defineProperty(e, "launchAsync", { enumerable: !0, get: function () { return i.launchAsync } }); var a = r(411); Object.defineProperty(e, "CookiePolicy", { enumerable: !0, get: function () { return a.CookiePolicy } }), "undefined" != typeof window && window.addEventListener("load", (function () { var e; window.hasOwnProperty("Promise") || ("https://ircdname.azureedge.net/permanent-static-resources/promise-polyfill.min.js", (e = document.createElement("script")).src = "https://ircdname.azureedge.net/permanent-static-resources/promise-polyfill.min.js", document.head.appendChild(e)), t.renderButtons() })) })(), n })() }));